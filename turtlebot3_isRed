#!/usr/bin/env python
import smbus
import time
import rospy
# Get I2C bus
bus = smbus.SMBus(1)

class ColourSensor():
    
    def __init__(self):
        rospy.init_node('turtlebot3_isRed')
        # ISL29125 address, 0x44(68)
        # Select configuation-1register, 0x01(01)
        # 0x0D(13) Operation: RGB, Range: 360 lux, Res: 16 Bits
        bus.write_byte_data(0x44, 0x01, 0x05)

        time.sleep(1)

        rospy.loginfo("Reading colour values")

        self.getAndUpdateColour()

    def getAndUpdateColour(self):
        redCounter = 0
        while not rospy.is_shutdown():
            #rospy.loginfo("Searching... ")
            # Read the data from the sensor
            # We read all three colours because a comparison between them is used to determine red.
            data = bus.read_i2c_block_data(0x44, 0x09, 6)

            # Convert the data to green, red and blue int values
            # Convert the data
            green = data[1] * 256 + data[0]
            red = data[3] * 256 + data[2]
            blue = data[5] * 256 + data[4]
            #We found that if the red colour is larger than both green and blue then it's on a target.
            if(red > green * 1.1 and red > blue * 1.1):
                redCounter += 1
                rospy.loginfo("Found target nr.: %d", redCounter)
                
                #Sleep so we don't count the same target twice.
                for _ in range(10):
                    time.sleep(0.25)

def main():
    try:
        colourSensor = ColourSensor()
    except rospy.ROSInterruptException:
        pass

if __name__ == '__main__':
    main()